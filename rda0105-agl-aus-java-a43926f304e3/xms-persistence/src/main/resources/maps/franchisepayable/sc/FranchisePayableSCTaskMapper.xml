<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="FranchisePayableSCTask">

    <update id="reconcileInvoicePaymentAwbLevel" parameterType="FranchisePayableFilter"
            statementType="CALLABLE">
        { CALL recl_inv_payment_awb_level(#{startDate},
        #{endDate}) }
    </update>

    <update id="reconcileFranchiseTaxAmount">
        <![CDATA[
		UPDATE xms_tbl_shipment_billing
		SET franchise_tax_amount = customer_tax_percent*franchise_cost/100
		WHERE customer_tax_amount<>0 AND franchise_tax_amount=0
		]]>
    </update>

    <!-- Prepare data for new tables -->
    <insert id="prepareDataForMSMarginV2" parameterType="FranchisePayableFilter">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_margin (
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        )
        <![CDATA[
		SELECT 
			#{rptTxnId},
			franchise_code,
			apply_date AS paymentDate,
		    invoice_code AS invoiceNumber,
			airbill_number AS airbillNumber,
		    customer_code AS customerNumber,
		    customer_name AS customerName,
		    inter_domes AS internationalDomestic,
		    cust_cost AS customerTotalExcGst,
		    cust_tax AS customerTotalGst,
		    fran_cost AS franchiseCostExcGst,
		    fran_tax AS franchiseCostGst,
		    prev_paid AS previouslyPaid,
		    rev_paid AS paymentsReceived,
		    IF(prev_paid+rev_paid>cust_cost+cust_tax,0.00,(cust_cost + cust_tax) - (prev_paid + rev_paid)) AS amountOutstanding,
		    (total_fran_carrier_credit) AS creditsFranchiseCost,
	    	(total_cust_carrier_credit+total_cust_credit)  AS creditsCustomerCost,
	    	cust_cost - fran_cost AS grossMarginExcGst,
			cust_tax - fran_tax AS grossMarginGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
	    			IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	) AS profitShareExcGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( ((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)
						)
	    				-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    			) * profit_share / 100
	    	) AS profitShareGst,
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	)
	    	+ 
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( ((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    			) * profit_share / 100
	    	) AS totalProfitShare
	    FROM tmp_xms_tbl_fran_pab_margin 
	    WHERE rpt_txn_id = #{rptTxnId} 
	    ]]>
    </insert>

    <insert id="prepareDataFor61DaysV2" parameterType="FranchisePayableFilter">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_61days (
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        previously_deducted_cost,
        profit_share_on_late_fees,
        repaid_carrier_deductions
        )
        <![CDATA[
		SELECT 
			#{rptTxnId},
			franchise_code,
			apply_date AS paymentDate,
			invoice_code AS invoiceNumber,
			airbill_number AS airbillNumber,
			customer_code AS customerNumber,
			customer_name AS customerName,
			inter_domes AS internationalDomestic,
			cust_cost AS customerTotalExcGst,
			cust_tax AS customerTotalGst,
			fran_cost AS franchiseCostExcGst,
			fran_tax AS franchiseCostGst,
			prev_paid AS previouslyPaid,
			rev_paid AS paymentsReceived,
			IF(prev_paid+rev_paid>cust_cost+cust_tax,0.00,(cust_cost + cust_tax) - (prev_paid + rev_paid)) AS amountOutstanding,
			(total_fran_carrier_credit) AS creditsFranchiseCost,
		    (total_cust_credit + total_cust_carrier_credit) AS creditsCustomerCost,
		    cust_cost - fran_cost AS grossMarginExcGst,
			cust_tax - fran_tax AS grossMarginGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
	    			IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)	
						)		    				
	    				-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	) AS profitShareExcGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,
	    			IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( ((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)	
						)	
	    				-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    				) * profit_share / 100
	    	) AS profitShareGst,
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)	
						)			    				
	    				-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	)
	    	+ 
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( ((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)
						)	
	    				-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    			) * profit_share / 100
	    	) AS totalProfitShare,
			IF(#{startDate}<=invoice_date_6x,
					IF(fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d < 0,0,fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d), 
					IF(fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d - real_payment_60d_startdate - total_cus_carrier_credit_60d_startdate<0,0,fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d - real_payment_60d_startdate - total_cus_carrier_credit_60d_startdate)
				) AS previouslyDeductedCost, 
		    IF((prev_paid+rev_paid) - (cust_cost+cust_tax)>0,(prev_paid+rev_paid) - (cust_cost+cust_tax),0)*late_fee_share/100 AS profitShareOnLateFees,
		    IF( rev_paid - cur_cust_credit -  IF(#{startDate}<=invoice_date_6x,
					IF(fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d < 0,0,fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d), 
					IF(fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d - real_payment_60d_startdate - total_cus_carrier_credit_60d_startdate<0,0,fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d - real_payment_60d_startdate - total_cus_carrier_credit_60d_startdate)
				)> 0,
	    	IF(#{startDate}<=invoice_date_6x,
				IF(fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d < 0,0,fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d), 
				IF(fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d - real_payment_60d_startdate - total_cus_carrier_credit_60d_startdate<0,0,fran_cost+fran_tax - total_fran_carrier_credit_in_60d - real_payment_in_60d - real_payment_60d_startdate - total_cus_carrier_credit_60d_startdate)
			),
	    		rev_paid
	    	) AS repaid_carrier_deductions
		FROM tmp_xms_tbl_fran_pab_margin61 
		WHERE rpt_txn_id = #{rptTxnId} 
		]]>
    </insert>

    <insert id="prepareDataForCreditV2" parameterType="FranchisePayableFilter">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_credit (
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        is_taxable_shipment,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        new_margin_exc_gst,
        new_margin_gst,
        credits_franchise_cost_exc_gst,
        credits_franchise_cost_gst,
        credits_customer_cost_exc_gst,
        credits_customer_cost_gst,
        carrier_credit_amount,
        carrier_credit_gst,
        carrier_credit_total
        )
        <![CDATA[
		SELECT 
			#{rptTxnId},
			franchise_code,
			apply_date AS paymentDate,
		    invoice_code AS invoiceNumber,
			cr.airbill_number AS airbillNumber,
		    customer_code AS customerNumber,
		    customer_name AS customerName,
		    if(sender.country = receiver.country and sender.country = sst.default_origin_country,'Domestic','International') AS internationalDomestic,
		    if((sender.country = receiver.country and sender.country = sst.default_origin_country)
        		or
        		(sender.country != receiver.country and sender.country = sst.default_origin_country and eec.countryname is not null)
				,1,0) as is_taxable_shipment,
		    cust_cost AS customerTotalExcGst,
		    cust_tax AS customerTotalGst,
		    fran_cost AS franchiseCostExcGst,
		    fran_tax AS franchiseCostGst,
		    prev_paid AS previouslyPaid,
		    rev_paid AS paymentsReceived,
		    IF(prev_paid+rev_paid>cust_cost+cust_tax,0.00,(cust_cost + cust_tax) - (prev_paid + rev_paid)) AS amountOutstanding,
	    	cust_cost - fran_cost AS grossMarginExcGst,
			cust_tax - fran_tax AS grossMarginGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
	    			IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	) AS profitShareExcGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( ((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)
						)
	    				-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    			) * profit_share / 100
	    	) AS profitShareGst,
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	)
	    	+ 
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( ((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    			) * profit_share / 100
	    	) AS totalProfitShare,
		    IF((cust_cost+cust_tax-total_cust_carrier_credit)-(fran_cost+fran_tax-total_fran_carrier_credit)-total_cust_credit<0,0
		    	,((cust_cost+cust_tax-total_cust_carrier_credit)-(fran_cost+fran_tax-total_fran_carrier_credit)-total_cust_credit))/(1+cust_tax/cust_cost) AS newMarginExcGst,
			IF((cust_cost+cust_tax-total_cust_carrier_credit)-(fran_cost+fran_tax-total_fran_carrier_credit)-total_cust_credit<0,0
		    	,(cust_cost+cust_tax-total_cust_carrier_credit)-(fran_cost+fran_tax-total_fran_carrier_credit)-total_cust_credit)*cust_tax / (cust_cost +cust_tax) AS newMarginGst,
		    (total_fran_carrier_credit)/(1+cust_tax/cust_cost) AS credits_franchise_cost_exc_gst,
		    (total_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax) AS credits_franchise_cost_gst,
	    	(total_cust_carrier_credit+total_cust_credit)/(1+cust_tax/cust_cost) AS credits_customer_cost_exc_gst,
	    	(total_cust_carrier_credit+total_cust_credit)*cust_tax / (cust_cost +cust_tax) AS credits_customer_cost_gst,
	    	ifnull(credit.carrier_credit_amount,0) as carrier_credit_amount,
	    	ifnull(credit.carrier_credit_gst,0) as carrier_credit_gst,
	    	ifnull(credit.carrier_credit_total,0) as carrier_credit_total
	    FROM tmp_xms_tbl_fran_pab_credit as cr
		inner join xms_tbl_shipment_billing as sb on sb.airbill_number = cr.airbill_number and sb.accessorial_count = 0
		inner join xms_tbl_address as sender on sender.addressid = sb.senderaddressid
		inner join xms_tbl_address as receiver on receiver.addressid = sb.receiveraddressid
		inner join xms_tbl_country as rc on rc.countryid = receiver.country
		left join
			(select setting_value as default_origin_country from xms_tbl_system_setting	
			where setting_name = 'Default Origin Country' limit 1
		    ) as sst on 1=1
		left join xms_tbl_country_eu as eec on eec.countryname = rc.countryname
		left join 
			(select
				adj.airbill_number,
				sum(if(adj.credit_type=0,adj.customer_amount,0)) as carrier_credit_amount,
				sum(if(adj.credit_type=0,adj.gst_customer_amount,0)) as carrier_credit_gst,
				sum(if(adj.credit_type=0,adj.customer_amount,0) + if(adj.credit_type=0,adj.gst_customer_amount,0)) as carrier_credit_total
			from xms_tbl_customer_payment as cp 
			inner join xms_tbl_credit_note_detail as cnd on cnd.cus_paymentid = cp.cus_paymentid
			inner join xms_tbl_airbill_adjustment as adj on adj.adjustmentid = cnd.adjustmentid
			where cp.payment_date>=#{startDate,jdbcType=DATE} and cp.payment_date<date_add(#{endDate,jdbcType=DATE},interval 1 day)
			group by adj.airbill_number
			) as credit on credit.airbill_number = cr.airbill_number
	    WHERE rpt_txn_id = #{rptTxnId}
	    ]]>
    </insert>

    <insert id="prepareDataForDeductV2" parameterType="FranchisePayableFilter">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_deduct (
        rpt_txn_id,
        franchise_code,
        customer_name,
        invoice_number,
        airbill_number,
        customer_payment,
        customer_cost,
        customer_tax,
        franchise_cost,
        franchise_tax,
        franchise_charge
        )
        <![CDATA[
		SELECT
			#{rptTxnId},
			franchise_code,
			customer_name AS customerName,
			invoice_code AS invoiceNumber,
			airbill_number AS airbillNumber,
			customer_payment AS customerPayment,
			cust_cost AS customerCost,
			cust_tax AS customerTax,
			fran_cost AS franchiseCost,
			fran_tax AS franchiseTax,
			franchise_charge AS franchiseCharge
		FROM tmp_xms_tbl_fran_pab_deduct
		WHERE rpt_txn_id = #{rptTxnId} and franchise_charge>0
	    ]]>
    </insert>

    <insert id="prepareDataForNonCentralV2" parameterType="FranchisePayableFilter">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_non_central (
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        )
        <![CDATA[
		SELECT 
			#{rptTxnId},
			franchise_code,
			apply_date AS paymentDate,
		    invoice_code AS invoiceNumber,
			airbill_number AS airbillNumber,
		    customer_code AS customerNumber,
		    customer_name AS customerName,
		    inter_domes AS internationalDomestic,
		    cust_cost AS customerTotalExcGst,
		    cust_tax AS customerTotalGst,
		    fran_cost AS franchiseCostExcGst,
		    fran_tax AS franchiseCostGst,
		    prev_paid AS previouslyPaid,
		    rev_paid AS paymentsReceived,
		    IF(prev_paid+rev_paid>cust_cost+cust_tax,0.00,(cust_cost + cust_tax) - (prev_paid + rev_paid)) AS amountOutstanding,
	    	total_fran_carrier_credit AS creditsFranchiseCost,
	    	(total_cust_carrier_credit+total_cust_credit)  AS creditsCustomerCost,
	    	cust_cost - fran_cost AS grossMarginExcGst,
			cust_tax - fran_tax AS grossMarginGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
	    			IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	) AS profitShareExcGst,
	    	IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,0,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)
						)
	    				-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    				) * profit_share / 100
	    	) AS profitShareGst,
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost) <= 0,
					IF( rev_paid - cur_cust_carrier_credit - cur_fran_carrier_credit >0 , 
	    				0,
	    				IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0,
	    					0,
	    					-1*((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))	
						)
					)* profit_share / 100,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)/(1 + cust_tax / cust_cost) - fran_cost + total_fran_carrier_credit/(1 + cust_tax / cust_cost)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))/(1 + cust_tax / cust_cost)  - fran_cost + (total_fran_carrier_credit-cur_fran_carrier_credit)/(1 + cust_tax / cust_cost))
	    			) * profit_share / 100
	    	)
	    	+ 
			IF( (prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax) <= 0,0,
	    			IF( (prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax)<=0, 
	    				(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax), 
	    				
	    				IF (
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)<0, 
							0,
							(prev_paid + rev_paid - total_cust_credit - total_cust_carrier_credit)*cust_tax / (cust_cost +cust_tax) - fran_tax + total_fran_carrier_credit*cust_tax / (cust_cost +cust_tax)
						)
						-
	    				((prev_paid - (total_cust_credit-cur_cust_credit) - (total_cust_carrier_credit-cur_cust_carrier_credit))*cust_tax / (cust_cost +cust_tax)  - fran_tax + (total_fran_carrier_credit-cur_fran_carrier_credit)*cust_tax / (cust_cost +cust_tax))
	    				) * profit_share / 100
	    	) AS totalProfitShare
	    FROM tmp_xms_tbl_fran_pab_non_central 
	    WHERE rpt_txn_id = #{rptTxnId}
	    ]]>
    </insert>

    <insert id="prepareDataForOverpaymentV2" parameterType="FranchisePayableFilter">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_overpayment (
        rpt_txn_id,
        franchise_code,
        origin_payment_date,
        customer_number,
        customer_name,
        overpayment_type,
        amount
        )
        <![CDATA[
		SELECT
			#{rptTxnId},
			franchise_code,
			payment_date AS originPaymentDate,
			customer_code AS customerNumber,
			customer_name AS customerName,
			overpayment_type AS overpaymentType,
			over_amount AS amount
		FROM tmp_xms_tbl_fran_pab_overpayment 
	    WHERE rpt_txn_id = #{rptTxnId}
	    ]]>
    </insert>
    <!-- End of prepare data for new tables -->

    <insert id="prepareDataForMarginAnd61Days" parameterType="FranchisePayableFilter">
        <![CDATA[
		INSERT INTO tmp_xms_tbl_fran_pab_margin_and_61days(
			rpt_txn_id,
			franchise_code,
			apply_date,
		    invoice_code,
		    invoice_date,
		    airbill_number,
		    customer_code,
		    customer_name,
		    rev_paid,
		    prev_paid,
		    cust_cost,
		    cust_tax,
		    fran_cost,
		    fran_tax,
		    total_fran_carrier_credit,
		    cur_fran_carrier_credit,
		    total_cust_carrier_credit,
		    cur_cust_carrier_credit,
		  	total_cust_credit,
		    cur_cust_credit,
		    profit_share,
		    late_fee_share,
		    management_service_fee,
		    inter_domes,
		    pausing_day
		    )
		SELECT 
			#{rptTxnId},
			r.franchise_code,
			r.apply_date,
		    r.invoice_code,
		    r.invoice_date,
		    r.airbill_number,
		    r.customer_code,
		    r.customer_name,
		    r.payment_received AS rev_paid,
		    r.prev_paid,
		    SUM(sb.customer_cost) AS cust_cost,
		    SUM(sb.customer_tax_amount) AS cust_tax,
		    SUM(sb.franchise_cost) AS fran_cost,
		    SUM(sb.franchise_tax_amount) AS fran_tax,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) 
			AS total_cust_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) AS cur_cust_credit,
			r.profit_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting 
					WHERE setting_name = 'Support Center List Profit Share %'),0) AS late_fee_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting
					WHERE setting_name = 'Management Service Fee Percentage'),0) AS management_service_fee,
		    IF(sb.origin_countryid = sb.destination_countryid, 'Domestic', 'International') AS inter_domes,
		    IFNULL((SELECT SUM(apd.pausing_day) FROM xms_tbl_airbill_pausing_deduct AS apd WHERE apd.airbill_number = r.airbill_number), 0 ) AS pausing_day
		FROM
			(SELECT 
				ip.apply_date as apply_date,
				IF(c.franchise_code IS NULL,LEFT(i.customer_code,3),c.franchise_code) AS franchise_code,
		        i.invoice_code,
		        i.invoice_date,
		        ipd.airbill_number,
		        i.customer_code,
		        ca.customer_name,
		        SUM(ipd.amount) AS payment_received,
		        IFNULL(
					(SELECT SUM(ipd2.amount)
		            FROM xms_tbl_invoice_payment_detail AS ipd2
		            INNER JOIN xms_tbl_invoice_payment AS ip2 ON ip2.invoice_paymentid = ipd2.invoice_paymentid
		            WHERE ipd2.airbill_number = ipd.airbill_number
						AND ip2.apply_date < #{startDate}), 0) AS prev_paid,
				IFNULL(
					(SELECT profit_share
		            FROM xms_tbl_franchise
		            WHERE LEFT(franchise_code, 3) = c.franchise_code LIMIT 1), 0) AS profit_share
			FROM xms_tbl_invoice_payment_detail AS ipd
			INNER JOIN xms_tbl_invoice_payment AS ip ON ip.invoice_paymentid = ipd.invoice_paymentid
			INNER JOIN xms_tbl_invoice AS i ON i.invoiceid = ip.invoiceid
			INNER JOIN (select i_tmp.customer_code as customer_code, LEFT(i_tmp.customer_code,3) as franchise_code from  xms_tbl_invoice as i_tmp group by i_tmp.customer_code) AS c ON c.customer_code = i.customer_code
			INNER JOIN xms_tbl_customer_address AS ca ON c.customer_code = ca.customer_code
			WHERE ip.apply_date BETWEEN #{startDate} AND #{endDate}
			]]>
        AND c.franchise_code IN
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        GROUP BY ipd.airbill_number) AS r
        INNER JOIN xms_tbl_shipment_billing AS sb ON r.airbill_number = sb.airbill_number
        WHERE sb.carrier IN (select service_id from xms_tbl_service where non_centralized = 0 and inactive = 0)
        GROUP BY sb.airbill_number
        ORDER BY apply_date, invoice_code, airbill_number
    </insert>

    <insert id="prepareDataForMargin" parameterType="FranchisePayableFilter">
        <![CDATA[
		INSERT INTO tmp_xms_tbl_fran_pab_margin(
			rpt_txn_id,
			franchise_code,
			apply_date,
		    invoice_code,
		    invoice_date,
		    airbill_number,
		    customer_code,
		    customer_name,
		    rev_paid,
		    prev_paid,
		    cust_cost,
		    cust_tax,
		    fran_cost,
		    fran_tax,
		    total_fran_carrier_credit,
		    cur_fran_carrier_credit,
		    total_cust_carrier_credit,
		    cur_cust_carrier_credit,
		  	total_cust_credit,
		    cur_cust_credit,
		    profit_share,
		    late_fee_share,
		    management_service_fee,
		    inter_domes,
		    pausing_day
		    )
		SELECT 
			#{rptTxnId},
			r.franchise_code,
			r.apply_date,
		    r.invoice_code,
		    r.invoice_date,
		    r.airbill_number,
		    r.customer_code,
		    r.customer_name,
		    r.payment_received AS rev_paid,
		    r.prev_paid,
		    SUM(sb.customer_cost) AS cust_cost,
		    SUM(sb.customer_tax_amount) AS cust_tax,
		    SUM(sb.franchise_cost) AS fran_cost,
		    SUM(sb.franchise_tax_amount) AS fran_tax,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate} 
					AND ip_.apply_date < IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ip_.apply_date < IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ip_.apply_date < IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ip_.apply_date < IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ip_.apply_date < IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) 
			AS total_cust_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ip_.apply_date < IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) AS cur_cust_credit,
			r.profit_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting 
					WHERE setting_name = 'Support Center List Profit Share %'),0) AS late_fee_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting
					WHERE setting_name = 'Management Service Fee Percentage'),0) AS management_service_fee,
		    IF(sb.origin_countryid = sb.destination_countryid, 'Domestic', 'International') AS inter_domes,
		    IFNULL((SELECT SUM(apd.pausing_day) FROM xms_tbl_airbill_pausing_deduct AS apd WHERE apd.airbill_number = r.airbill_number), 0 ) AS pausing_day
		FROM
			(SELECT 
				ip.apply_date as apply_date,
				IF(c.franchise_code IS NULL,LEFT(i.customer_code,3),c.franchise_code) AS franchise_code,
		        i.invoice_code,
		        i.invoice_date,
		        ipd.airbill_number,
		        i.customer_code,
		        ca.customer_name,
		        SUM(ipd.amount) AS payment_received,
		        IFNULL(
					(SELECT SUM(ipd2.amount)
		            FROM xms_tbl_invoice_payment_detail AS ipd2
		            INNER JOIN xms_tbl_invoice_payment AS ip2 ON ip2.invoice_paymentid = ipd2.invoice_paymentid
		            WHERE ipd2.airbill_number = ipd.airbill_number
						AND ip2.apply_date < #{startDate}), 0) AS prev_paid,
				IFNULL(
					(SELECT profit_share
		            FROM xms_tbl_franchise
		            WHERE LEFT(franchise_code, 3) = c.franchise_code LIMIT 1), 0) AS profit_share,
		        awb61.awb_date6x AS airbill_date6x 
			FROM xms_tbl_invoice_payment_detail AS ipd
			INNER JOIN xms_tbl_invoice_payment AS ip ON ip.invoice_paymentid = ipd.invoice_paymentid
			INNER JOIN xms_tbl_invoice AS i ON i.invoiceid = ip.invoiceid
			INNER JOIN (select i_tmp.customer_code as customer_code, LEFT(i_tmp.customer_code,3) as franchise_code from  xms_tbl_invoice as i_tmp group by i_tmp.customer_code) AS c ON c.customer_code = i.customer_code
			INNER JOIN xms_tbl_customer_address AS ca ON c.customer_code = ca.customer_code
			LEFT JOIN 
					(
						SELECT ma61.airbill_number , DATE_ADD(ma61.invoice_date, INTERVAL IFNULL(apd.pausing_day,0)+60 DAY) AS  awb_date6x FROM 
						(SELECT * FROM tmp_xms_tbl_fran_pab_margin_and_61days tmp_ma61 WHERE tmp_ma61.rpt_txn_id =  #{rptTxnId} GROUP BY tmp_ma61.airbill_number) ma61
						LEFT JOIN (SELECT * FROM xms_tbl_airbill_pausing_deduct tmp_apd GROUP BY tmp_apd.airbill_number) apd on apd.airbill_number = ma61.airbill_number
						WHERE 
						(SELECT 
									count(*)
								FROM
									xms_tbl_airbill_adjustment AS aa_tmp
								WHERE
										aa_tmp.start_pausing_date is not null
										and aa_tmp.start_pausing_date <= DATE_ADD(ma61.invoice_date, INTERVAL IFNULL(apd.pausing_day,0)+ 60 DAY)
										AND aa_tmp.airbill_number = ma61.airbill_number
										AND aa_tmp.credit_type = 0
										AND aa_tmp.status in (1 , 2)) = 0
						) AS awb61 ON awb61.airbill_number = ipd.airbill_number
			WHERE ip.apply_date BETWEEN #{startDate} AND #{endDate}
				AND ip.apply_date < IFNULL(awb61.awb_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
			]]>
        AND c.franchise_code IN
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        GROUP BY ipd.airbill_number) AS r
        INNER JOIN xms_tbl_shipment_billing AS sb ON r.airbill_number = sb.airbill_number
        WHERE sb.carrier IN (select service_id from xms_tbl_service where non_centralized = 0 and inactive = 0)
        GROUP BY sb.airbill_number
        ORDER BY apply_date, invoice_code, airbill_number
    </insert>

    <insert id="prepareDataForMargin61" parameterType="FranchisePayableFilter">
        <![CDATA[
		INSERT INTO tmp_xms_tbl_fran_pab_margin61(
			rpt_txn_id,
			franchise_code,
			apply_date,
		    invoice_code,
		    invoice_date,
		    airbill_number,
		    customer_code,
		    customer_name,
		    rev_paid,
		    prev_paid,
		    cust_cost,
		    cust_tax,
		    fran_cost,
		    fran_tax,
		    total_fran_carrier_credit,
		    cur_fran_carrier_credit,
		    total_cust_carrier_credit,
		    cur_cust_carrier_credit,
		  	total_cust_credit,
		    cur_cust_credit,
		    profit_share,
		    late_fee_share,
		    management_service_fee,
		    inter_domes,
		    pausing_day,
		    invoice_date_6x,
		    real_payment_in_60d,
		    total_fran_carrier_credit_in_60d,
		    real_payment_60d_startdate,
		    total_cus_carrier_credit_60d_startdate
		    )
		SELECT 
			#{rptTxnId},
			r.franchise_code,
			r.apply_date,
		    r.invoice_code,
		    r.invoice_date,
		    r.airbill_number,
		    r.customer_code,
		    r.customer_name,
		    r.payment_received AS rev_paid,
		    r.prev_paid,
		    SUM(sb.customer_cost) AS cust_cost,
		    SUM(sb.customer_tax_amount) AS cust_tax,
		    SUM(sb.franchise_cost) AS fran_cost,
		    SUM(sb.franchise_tax_amount) AS fran_tax,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ip_.apply_date >= IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ip_.apply_date >= IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) 
			AS total_cust_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ip_.apply_date >= IFNULL(r.airbill_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) AS cur_cust_credit,
			r.profit_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting 
					WHERE setting_name = 'Support Center List Profit Share %'),0) AS late_fee_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting
					WHERE setting_name = 'Management Service Fee Percentage'),0) AS management_service_fee,
		    IF(sb.origin_countryid = sb.destination_countryid, 'Domestic', 'International') AS inter_domes,
		    IFNULL((SELECT SUM(apd.pausing_day) FROM xms_tbl_airbill_pausing_deduct AS apd WHERE apd.airbill_number = r.airbill_number), 0 ) AS pausing_day,
		    
		    r.airbill_date6x AS invoice_date_6x,
		    IFNULL((SELECT 
	                    SUM(ipd_.amount)
	                FROM
	                    xms_tbl_invoice_payment_detail AS ipd_
	                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
	                WHERE
	                    ipd_.airbill_number = r.airbill_number
						AND not exists (select cus_paymentid from xms_tbl_credit_note_detail cnd where cnd.cus_paymentid =  ip_.cus_paymentid)
						AND ip_.apply_date < r.airbill_date6x), 0) AS real_payment_in_60d,
							
	            IFNULL((SELECT 
	                    SUM(IF(ipd_.amount = 0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount) * ipd_.amount / (adj.customer_amount + adj.gst_customer_amount)))
	                FROM
	                    xms_tbl_invoice_payment_detail AS ipd_
	                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
	                INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
	                INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
	                INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
	                WHERE
	                    ip_.apply_date < r.airbill_date6x
	                    AND r.airbill_date6x is not null
						AND ipd_.airbill_number = r.airbill_number
						AND adj.credit_type = 0), 0) AS total_fran_carrier_credit_in_60d,
							
				IFNULL((SELECT 
	                    SUM(ipd_.amount)
	                FROM
	                    xms_tbl_invoice_payment_detail AS ipd_
	                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
	                WHERE
	                    ipd_.airbill_number = r.airbill_number
						AND not exists (select cus_paymentid from xms_tbl_credit_note_detail cnd where cnd.cus_paymentid =  ip_.cus_paymentid)
						AND r.airbill_date6x is not null
						AND ip_.apply_date >= r.airbill_date6x
						AND	ip_.apply_date < #{startDate}	
						), 0) AS real_payment_60d_startdate,	
				IFNULL(
					(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
					INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
					INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
					INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
					INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
					WHERE ip_.apply_date < #{startDate} 
						AND r.airbill_date6x is not null
						AND ip_.apply_date >= r.airbill_date6x
						AND ipd_.airbill_number = r.airbill_number
						AND adj.credit_type = 0), 0) 
				AS total_cus_carrier_credit_60d_startdate
		FROM
			(SELECT 
				ip.apply_date as apply_date,
				IF(c.franchise_code IS NULL,LEFT(i.customer_code,3),c.franchise_code) AS franchise_code,
		        i.invoice_code,
		        i.invoice_date,
		        ipd.airbill_number,
		        i.customer_code,
		        ca.customer_name,
		        SUM(ipd.amount) AS payment_received,
		        IFNULL(
					(SELECT SUM(ipd2.amount)
		            FROM xms_tbl_invoice_payment_detail AS ipd2
		            INNER JOIN xms_tbl_invoice_payment AS ip2 ON ip2.invoice_paymentid = ipd2.invoice_paymentid
		            WHERE ipd2.airbill_number = ipd.airbill_number
						AND ip2.apply_date < IF(#{startDate}>IFNULL(awb61.awb_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day )), 
													#{startDate},
													IFNULL(awb61.awb_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
												)
						
					), 0) AS prev_paid,
				IFNULL(
					(SELECT profit_share
		            FROM xms_tbl_franchise
		            WHERE LEFT(franchise_code, 3) = c.franchise_code LIMIT 1), 0) AS profit_share,
		    	awb61.awb_date6x AS airbill_date6x 
			FROM xms_tbl_invoice_payment_detail AS ipd
			INNER JOIN xms_tbl_invoice_payment AS ip ON ip.invoice_paymentid = ipd.invoice_paymentid
			INNER JOIN xms_tbl_invoice AS i ON i.invoiceid = ip.invoiceid
			INNER JOIN (select i_tmp.customer_code as customer_code, LEFT(i_tmp.customer_code,3) as franchise_code from  xms_tbl_invoice as i_tmp group by i_tmp.customer_code) AS c ON c.customer_code = i.customer_code
			INNER JOIN xms_tbl_customer_address AS ca ON c.customer_code = ca.customer_code
			LEFT JOIN 
					(
						SELECT ma61.airbill_number , DATE_ADD(ma61.invoice_date, INTERVAL IFNULL(apd.pausing_day,0)+60 DAY) AS  awb_date6x FROM 
						(SELECT * FROM tmp_xms_tbl_fran_pab_margin_and_61days tmp_ma61 WHERE tmp_ma61.rpt_txn_id =  #{rptTxnId} GROUP BY tmp_ma61.airbill_number) ma61
						LEFT JOIN (SELECT * FROM xms_tbl_airbill_pausing_deduct tmp_apd GROUP BY tmp_apd.airbill_number) apd on apd.airbill_number = ma61.airbill_number
						WHERE 
						(SELECT 
									count(*)
								FROM
									xms_tbl_airbill_adjustment AS aa_tmp
								WHERE
										aa_tmp.start_pausing_date is not null
										and aa_tmp.start_pausing_date <= DATE_ADD(ma61.invoice_date, INTERVAL IFNULL(apd.pausing_day,0)+ 60 DAY)
										AND aa_tmp.airbill_number = ma61.airbill_number
										AND aa_tmp.credit_type = 0
										AND aa_tmp.status in (1 , 2)) = 0
						) AS awb61 ON awb61.airbill_number = ipd.airbill_number
			WHERE ip.apply_date BETWEEN #{startDate} AND #{endDate}
				AND ip.apply_date >= IFNULL(awb61.awb_date6x, DATE_ADD(#{endDate}, INTERVAL 1 day ))
			]]>
        AND c.franchise_code IN
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        GROUP BY ipd.airbill_number) AS r
        INNER JOIN xms_tbl_shipment_billing AS sb ON r.airbill_number = sb.airbill_number
        WHERE sb.carrier IN (select service_id from xms_tbl_service where non_centralized = 0 and inactive = 0)
        GROUP BY sb.airbill_number
        ORDER BY apply_date, invoice_code, airbill_number
    </insert>

    <insert id="prepareDataForDeduct" parameterType="FranchisePayableFilter">
        <![CDATA[
		INSERT INTO tmp_xms_tbl_fran_pab_deduct(
			rpt_txn_id,
			franchise_code,
			customer_code,
			customer_name,
			invoice_code,
			invoice_date,
			invoice_date_61,
			airbill_number,
			customer_payment,
			cust_cost,
			cust_tax,
			fran_cost,
			fran_tax,
			franchise_charge
		)
		SELECT 
			#{rptTxnId},  
			franchise_code,
		    customer_code,
		    customer_name,
		    invoice_code,
		    invoice_date,
		    invoice_date6x,
		    airbill_number,
		    payment_receive,
		    customer_cost,
		    customer_tax_amount,
		    franchise_cost,
		    franchise_tax_amount,(
			IF(	
				 ((franchise_cost + franchise_tax_amount) - (total_fran_carrier_credit - cur_fran_carrier_credit))
				- (
				IF ((customer_cost + customer_tax_amount - (total_cust_carrier_credit - cur_cust_carrier_credit) - (franchise_cost+ franchise_tax_amount - (total_fran_carrier_credit - cur_fran_carrier_credit)))<0,total_cust_credit - cur_cust_credit,
					IF(total_cust_credit - cur_cust_credit - (customer_cost + customer_tax_amount - (total_cust_carrier_credit - cur_cust_carrier_credit) - (franchise_cost+ franchise_tax_amount - (total_fran_carrier_credit - cur_fran_carrier_credit)))<0, 0, total_cust_credit - cur_cust_credit - (customer_cost + customer_tax_amount - (total_cust_carrier_credit - cur_cust_carrier_credit) - (franchise_cost+ franchise_tax_amount - (total_fran_carrier_credit - cur_fran_carrier_credit))))
				)
				+ payment_in_60d - 	(total_cust_carrier_credit - cur_cust_carrier_credit) - (total_cust_credit-cur_cust_credit) 
				)<0,0,
					((franchise_cost + franchise_tax_amount) - (total_fran_carrier_credit - cur_fran_carrier_credit))
					- (
					IF ((customer_cost + customer_tax_amount - (total_cust_carrier_credit - cur_cust_carrier_credit) - (franchise_cost+ franchise_tax_amount - (total_fran_carrier_credit - cur_fran_carrier_credit)))<0,total_cust_credit - cur_cust_credit,
						IF(total_cust_credit - cur_cust_credit - (customer_cost + customer_tax_amount - (total_cust_carrier_credit - cur_cust_carrier_credit) - (franchise_cost+ franchise_tax_amount - (total_fran_carrier_credit - cur_fran_carrier_credit)))<0, 0, total_cust_credit - cur_cust_credit - (customer_cost + customer_tax_amount - (total_cust_carrier_credit - cur_cust_carrier_credit) - (franchise_cost+ franchise_tax_amount - (total_fran_carrier_credit - cur_fran_carrier_credit))))
					)
					+ payment_in_60d - 	(total_cust_carrier_credit - cur_cust_carrier_credit) - (total_cust_credit-cur_cust_credit) 
					)
					
				)
			)AS franchise_charge
		FROM
		(SELECT 
		    franchise_code,
		    customer_code,
		    customer_name,
		    invoice_code,
		    r.invoice_date AS invoice_date,
		    DATE_ADD(r.invoice_date,
		        INTERVAL (IFNULL((SELECT 
		                        SUM(apd.pausing_day)
		                    FROM
		                        xms_tbl_airbill_pausing_deduct AS apd
		                    WHERE
		                        apd.airbill_number = r.airbill_number),
		                0) + 60) DAY) AS invoice_date6x,
		    r.airbill_number,
		    payment_in_60d,
			payment_receive,
		    SUM(sb.customer_cost) AS customer_cost,
		    SUM(sb.customer_tax_amount) AS customer_tax_amount,
		    SUM(sb.franchise_cost) AS franchise_cost,
		    SUM(sb.franchise_tax_amount) AS franchise_tax_amount,
		    total_fran_carrier_credit AS total_fran_carrier_credit,
			cur_fran_carrier_credit AS cur_fran_carrier_credit,
			total_cust_carrier_credit AS total_cust_carrier_credit,
			cur_cust_carrier_credit AS cur_cust_carrier_credit,
			total_cust_credit AS total_cust_credit,
			cur_cust_credit AS cur_cust_credit
		FROM
		    (SELECT 
		        i.invoiceid,
		            IF(c.franchise_code IS NULL, LEFT(i.customer_code, 3), c.franchise_code) AS franchise_code,
		            i.customer_code,
		            i.invoice_code,
		            i.invoice_date,
		            si.airbill_number,
		            ca.customer_name,
		            SUM(IFNULL(ipd.amount, 0)) AS customer_payment,
		            IFNULL((SELECT 
		                    SUM(ipd_.amount)
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                WHERE
		                    ipd_.airbill_number = si.airbill_number
		                        AND ip_.apply_date < DATE_ADD(i.invoice_date, INTERVAL (IFNULL((SELECT 
		                            SUM(apd.pausing_day)
		                        FROM
		                            xms_tbl_airbill_pausing_deduct AS apd
		                        WHERE
		                            apd.airbill_number = si.airbill_number), 0) + 60) DAY)), 0) AS payment_in_60d,
					IFNULL((SELECT 
		                    SUM(ipd_.amount)
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                WHERE
		                    ipd_.airbill_number = si.airbill_number
		                        AND ip_.apply_date BETWEEN #{startDate} AND  #{endDate}), 0) AS payment_receive,
		            IFNULL((SELECT 
		                    SUM(IF(ipd_.amount = 0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount) * ipd_.amount / (adj.customer_amount + adj.gst_customer_amount)))
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
		                INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
		                INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
		                WHERE
		                    ip_.apply_date <=  #{endDate}
		                        AND ipd_.airbill_number = si.airbill_number
		                        AND adj.credit_type = 0), 0) AS total_fran_carrier_credit,
		            IFNULL((SELECT 
		                    SUM(IF(ipd_.amount = 0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount) * ipd_.amount / (adj.customer_amount + adj.gst_customer_amount)))
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
		                INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
		                INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
		                WHERE
		                    ip_.apply_date BETWEEN DATE_ADD(i.invoice_date, INTERVAL (IFNULL((SELECT 
		                            SUM(apd.pausing_day)
		                        FROM
		                            xms_tbl_airbill_pausing_deduct AS apd
		                        WHERE
		                            apd.airbill_number = si.airbill_number), 0) + 60) DAY) AND  #{endDate}
		                        AND ipd_.airbill_number = si.airbill_number
		                        AND adj.credit_type = 0), 0) AS cur_fran_carrier_credit,
		            IFNULL((SELECT 
		                    SUM(ipd_.amount)
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
		                INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
		                INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
		                WHERE
		                    ip_.apply_date <=  #{endDate}
		                        AND ipd_.airbill_number = si.airbill_number
		                        AND adj.credit_type = 0), 0) AS total_cust_carrier_credit,
		            IFNULL((SELECT 
		                    SUM(ipd_.amount)
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
		                INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
		                INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
		                WHERE
		                    ip_.apply_date BETWEEN DATE_ADD(i.invoice_date, INTERVAL (IFNULL((SELECT 
		                            SUM(apd.pausing_day)
		                        FROM
		                            xms_tbl_airbill_pausing_deduct AS apd
		                        WHERE
		                            apd.airbill_number = si.airbill_number), 0) + 60) DAY) AND  #{endDate}
		                        AND ipd_.airbill_number = si.airbill_number
		                        AND adj.credit_type = 0), 0) AS cur_cust_carrier_credit,
		            IFNULL((SELECT 
		                    SUM(ipd_.amount)
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
		                INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
		                INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
		                WHERE
		                    ip_.apply_date <=  #{endDate}
		                        AND ipd_.airbill_number = si.airbill_number
		                        AND adj.credit_type = 1), 0) AS total_cust_credit,
		            IFNULL((SELECT 
		                    SUM(ipd_.amount)
		                FROM
		                    xms_tbl_invoice_payment_detail AS ipd_
		                INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
		                INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
		                INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
		                INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
		                WHERE
		                    ip_.apply_date BETWEEN DATE_ADD(i.invoice_date, INTERVAL (IFNULL((SELECT 
		                            SUM(apd.pausing_day)
		                        FROM
		                            xms_tbl_airbill_pausing_deduct AS apd
		                        WHERE
		                            apd.airbill_number = si.airbill_number), 0) + 60) DAY) AND  #{endDate}
		                        AND ipd_.airbill_number = si.airbill_number
		                        AND adj.credit_type = 1), 0) AS cur_cust_credit
		    FROM
		        xms_tbl_invoice AS i
		    INNER JOIN xms_tbl_shipment_invoice AS si ON si.invoiceid = i.invoiceid
		    INNER JOIN (select i_tmp.customer_code as customer_code, LEFT(i_tmp.customer_code,3) as franchise_code from  xms_tbl_invoice as i_tmp group by i_tmp.customer_code) AS c ON c.customer_code = i.customer_code
		    INNER JOIN xms_tbl_customer_address AS ca ON ca.customer_code = i.customer_code
		    LEFT OUTER JOIN xms_tbl_invoice_payment_detail AS ipd ON ipd.airbill_number = si.airbill_number
		    LEFT OUTER JOIN xms_tbl_invoice_payment AS ip ON ip.invoice_paymentid = ipd.invoice_paymentid
		    WHERE
		        DATE_ADD(i.invoice_date, INTERVAL (IFNULL((SELECT 
		                SUM(apd.pausing_day)
		            FROM
		                xms_tbl_airbill_pausing_deduct AS apd
		            WHERE
		                apd.airbill_number = si.airbill_number), 0) + 60) DAY) BETWEEN #{startDate} AND  #{endDate}
						AND
						(SELECT count(*) FROM xms_tbl_airbill_adjustment AS aa 
						WHERE aa.start_pausing_date <= DATE_ADD(i.invoice_date, INTERVAL (IFNULL((SELECT 
								SUM(apd.pausing_day)
								FROM
									xms_tbl_airbill_pausing_deduct AS apd
								WHERE
									apd.airbill_number = si.airbill_number), 0) + 60) DAY)
						AND aa.credit_type = 0
						AND aa.airbill_number = si.airbill_number
						AND aa.airbill_number is not null AND aa.status in (1,2)
						) = 0
						
		            ]]>
        AND c.franchise_code IN
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        GROUP BY si.airbill_number) AS r
        INNER JOIN xms_tbl_shipment_billing AS sb ON sb.airbill_number = r.airbill_number
        GROUP BY r.airbill_number ) AS result
        ORDER BY customer_name, invoice_code, airbill_number
    </insert>

    <insert id="prepareDataForNonCentral" parameterType="FranchisePayableFilter">
        <![CDATA[
		INSERT INTO tmp_xms_tbl_fran_pab_non_central(
			rpt_txn_id,
			franchise_code,
			apply_date,
			invoice_code,
			invoice_date,
			airbill_number,
			customer_code,
			customer_name,
			rev_paid,
			prev_paid,
			cust_cost,
			cust_tax,
			fran_cost,
			fran_tax,
			total_fran_carrier_credit,
			cur_fran_carrier_credit,
			total_cust_carrier_credit,
			cur_cust_carrier_credit,
			total_cust_credit,
			cur_cust_credit,
			profit_share,
			late_fee_share,
			management_service_fee,
			inter_domes
		)
		SELECT 
			#{rptTxnId},
			r.franchise_code,
			r.apply_date,
		    r.invoice_code,
		    r.invoice_date,
		    r.airbill_number,
		    r.customer_code,
		    r.customer_name,
		    r.payment_received AS rev_paid,
		    r.prev_paid,
		    SUM(sb.customer_cost) AS cust_cost,
		    SUM(sb.customer_tax_amount) AS cust_tax,
		    SUM(sb.franchise_cost) AS fran_cost,
		    SUM(sb.franchise_tax_amount) AS fran_tax,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(IF(ipd_.amount=0, (adj.franchise_amount + adj.gst_franchise_amount), (adj.franchise_amount + adj.gst_franchise_amount)*ipd_.amount/(adj.customer_amount+adj.gst_customer_amount))) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_fran_carrier_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS total_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 0), 0) 
			AS cur_cust_carrier_credit,
            IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date <= #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) 
			AS total_cust_credit,
			IFNULL(
				(SELECT SUM(ipd_.amount) FROM xms_tbl_invoice_payment_detail AS ipd_
				INNER JOIN xms_tbl_invoice_payment AS ip_ ON ip_.invoice_paymentid = ipd_.invoice_paymentid
				INNER JOIN xms_tbl_customer_payment AS cp_ ON cp_.cus_paymentid = ip_.cus_paymentid
				INNER JOIN xms_tbl_credit_note_detail AS cnd ON cnd.cus_paymentid = cp_.cus_paymentid
				INNER JOIN xms_tbl_airbill_adjustment AS adj ON adj.adjustmentid = cnd.adjustmentid
				WHERE ip_.apply_date BETWEEN #{startDate} AND #{endDate}
					AND ipd_.airbill_number = r.airbill_number
					AND adj.credit_type = 1), 0) AS cur_cust_credit,
			r.profit_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting 
					WHERE setting_name = 'Support Center List Profit Share %'),0) AS late_fee_share,
			IFNULL((SELECT setting_value FROM xms_tbl_system_setting
					WHERE setting_name = 'Management Service Fee Percentage'),0) AS management_service_fee,
		    IF(sb.origin_countryid = sb.destination_countryid, 'Domestic', 'International') AS inter_domes
		FROM
			(SELECT 
				ip.apply_date,
				IF(c.franchise_code IS NULL,LEFT(i.customer_code,3),c.franchise_code) AS franchise_code,
		        i.invoice_code,
		        i.invoice_date,
		        ipd.airbill_number,
		        i.customer_code,
		        ca.customer_name,
		        SUM(ipd.amount) AS payment_received,
		        IFNULL(
					(SELECT SUM(ipd2.amount)
		            FROM xms_tbl_invoice_payment_detail AS ipd2
		            INNER JOIN xms_tbl_invoice_payment AS ip2 ON ip2.invoice_paymentid = ipd2.invoice_paymentid
		            WHERE ipd2.airbill_number = ipd.airbill_number
						AND ip2.apply_date < #{startDate}), 0) AS prev_paid,
				IFNULL(
					(SELECT profit_share
		            FROM xms_tbl_franchise
		            WHERE LEFT(franchise_code, 3) = c.franchise_code LIMIT 1), 0) AS profit_share
			FROM xms_tbl_invoice_payment_detail AS ipd
			INNER JOIN xms_tbl_invoice_payment AS ip ON ip.invoice_paymentid = ipd.invoice_paymentid
			INNER JOIN xms_tbl_invoice AS i ON i.invoiceid = ip.invoiceid
			INNER JOIN (select i_tmp.customer_code as customer_code, LEFT(i_tmp.customer_code,3) as franchise_code from  xms_tbl_invoice as i_tmp group by i_tmp.customer_code) AS c ON c.customer_code = i.customer_code
			INNER JOIN xms_tbl_customer_address AS ca ON c.customer_code = ca.customer_code
			WHERE ip.apply_date BETWEEN #{startDate} AND #{endDate}
			]]>
        AND c.franchise_code IN
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        GROUP BY ipd.airbill_number) AS r
        INNER JOIN xms_tbl_shipment_billing AS sb ON r.airbill_number = sb.airbill_number
        WHERE sb.carrier IN (select service_id from xms_tbl_service where non_centralized = 1 and inactive = 0)
        GROUP BY sb.airbill_number
        ORDER BY apply_date, invoice_code, airbill_number
    </insert>

    <insert id="prepareDataForCredit" parameterType="FranchisePayableFilter">
        <![CDATA[
		INSERT INTO tmp_xms_tbl_fran_pab_credit(
			rpt_txn_id,
			franchise_code,
			apply_date,
			invoice_code,
			invoice_date,
			airbill_number,
			customer_code,
			customer_name,
			rev_paid,
			prev_paid,
			cust_cost,
			cust_tax,
			fran_cost,
			fran_tax,
			total_cust_credit,
			cur_cust_credit,
			total_cust_carrier_credit,
			cur_cust_carrier_credit,
			total_fran_carrier_credit,
			cur_fran_carrier_credit,
			profit_share,
			late_fee_share,
			management_service_fee,
			inter_domes
		)
		SELECT  
			#{rptTxnId},
			franchise_code,
			apply_date,
		    invoice_code,
		    invoice_date,
		    airbill_number,
		    customer_code,
		    customer_name,
		    rev_paid,
		    prev_paid,
		    cust_cost,
		    cust_tax,
		    fran_cost,
		    fran_tax,
		    total_cust_credit,
		    cur_cust_credit,
		    total_cust_carrier_credit,
		    cur_cust_carrier_credit,
		    total_fran_carrier_credit,
		    cur_fran_carrier_credit,
		    profit_share,
		    late_fee_share,
		    management_service_fee,
		    inter_domes
		FROM tmp_xms_tbl_fran_pab_margin_and_61days
		WHERE rpt_txn_id = #{rptTxnId} AND (cur_cust_carrier_credit<>0 OR cur_fran_carrier_credit<>0 OR cur_cust_credit<>0)
		]]>
    </insert>

    <insert id="prepareDataForOverpayment" parameterType="FranchisePayableFilter">
        <![CDATA[
		INSERT INTO tmp_xms_tbl_fran_pab_overpayment(
			rpt_txn_id,
			franchise_code,
			payment_date,
			customer_code,
			customer_name,
			over_amount,
			overpayment_type
		)
		SELECT 
			#{rptTxnId},
			LEFT(cp.customer_code,3) AS franchise_code,
			DATE(cp.payment_date), 
			cp.customer_code, 
			ca.customer_name, 
			SUM(op.over_amount), 
			CASE ad.credit_type 
				WHEN 1 THEN 'Credit Note' 
    			WHEN 0 THEN 'Carrier Credit Note' 
    			ELSE 'Customer Payment' 
			END AS overpayment_type
		FROM xms_tbl_overpayment as op
		INNER JOIN xms_tbl_customer_payment as cp on cp.cus_paymentid = op.cus_paymentid
		INNER JOIN xms_tbl_customer_address as ca on ca.customer_code = cp.customer_code
		LEFT OUTER JOIN xms_tbl_credit_note_detail as cd on cd.cus_paymentid = cp.cus_paymentid
		LEFT OUTER JOIN xms_tbl_airbill_adjustment ad on ad.adjustmentid = cd.adjustmentid
		WHERE cp.payment_date BETWEEN #{startDate} AND #{endDate}
		]]>
        AND LEFT(cp.customer_code,3) IN
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        GROUP BY payment_date, customer_code, customer_name, overpayment_type
        ORDER BY payment_date, customer_code, customer_name, overpayment_type
    </insert>

    <!-- BEGIN copy data from the frozen to temporary tables v2 -->
    <insert id="copyFrozenMarginByRptTxnIdV2" parameterType="String">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_margin(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        FROM xms_tbl_sc_rpt_fran_pab_margin
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyFrozen61DaysByRptTxnIdV2" parameterType="String">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_61days(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        previously_deducted_cost,
        profit_share_on_late_fees,
        repaid_carrier_deductions
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        previously_deducted_cost,
        profit_share_on_late_fees,
        repaid_carrier_deductions
        FROM xms_tbl_sc_rpt_fran_pab_61days
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyFrozenCreditByRptTxnIdV2" parameterType="String">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_credit(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        is_taxable_shipment,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        new_margin_exc_gst,
        new_margin_gst,
        credits_franchise_cost_exc_gst,
        credits_franchise_cost_gst,
        credits_customer_cost_exc_gst,
        credits_customer_cost_gst,
        carrier_credit_amount,
        carrier_credit_gst,
        carrier_credit_total
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        is_taxable_shipment,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        new_margin_exc_gst,
        new_margin_gst,
        credits_franchise_cost_exc_gst,
        credits_franchise_cost_gst,
        credits_customer_cost_exc_gst,
        credits_customer_cost_gst,
        carrier_credit_amount,
        carrier_credit_gst,
        carrier_credit_total
        FROM xms_tbl_sc_rpt_fran_pab_credit
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyFrozenDeductByRptTxnIdV2" parameterType="String">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_deduct(
        rpt_txn_id,
        franchise_code,
        customer_name,
        invoice_number,
        airbill_number,
        customer_payment,
        customer_cost,
        customer_tax,
        franchise_cost,
        franchise_tax,
        franchise_charge
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        customer_name,
        invoice_number,
        airbill_number,
        customer_payment,
        customer_cost,
        customer_tax,
        franchise_cost,
        franchise_tax,
        franchise_charge
        FROM xms_tbl_sc_rpt_fran_pab_deduct
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyFrozenNonCentralByRptTxnIdV2" parameterType="String">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_non_central(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        FROM xms_tbl_sc_rpt_fran_pab_non_central
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyFrozenOverpaymentByRptTxnIdV2" parameterType="String">
        INSERT INTO tmp_xms_tbl_sc_rpt_fran_pab_overpayment(
        rpt_txn_id,
        franchise_code,
        origin_payment_date,
        customer_number,
        customer_name,
        overpayment_type,
        amount
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        origin_payment_date,
        customer_number,
        customer_name,
        overpayment_type,
        amount
        FROM xms_tbl_sc_rpt_fran_pab_overpayment
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>
    <!-- END copy data from the frozen to temporary tables v2 -->

    <!-- Use to copy data from live to the frozen tables v2 -->
    <insert id="copy61DaysToFrozenV2" parameterType="String">
        INSERT INTO xms_tbl_sc_rpt_fran_pab_61days(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        previously_deducted_cost,
        profit_share_on_late_fees,
        repaid_carrier_deductions
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        previously_deducted_cost,
        profit_share_on_late_fees,
        repaid_carrier_deductions
        FROM tmp_xms_tbl_sc_rpt_fran_pab_61days
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyMarginToFrozenV2" parameterType="String">
        INSERT INTO xms_tbl_sc_rpt_fran_pab_margin(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        FROM tmp_xms_tbl_sc_rpt_fran_pab_margin
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyCreditToFrozenV2" parameterType="String">
        INSERT INTO xms_tbl_sc_rpt_fran_pab_credit(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        is_taxable_shipment,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        new_margin_exc_gst,
        new_margin_gst,
        credits_franchise_cost_exc_gst,
        credits_franchise_cost_gst,
        credits_customer_cost_exc_gst,
        credits_customer_cost_gst,
        carrier_credit_amount,
        carrier_credit_gst,
        carrier_credit_total
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        is_taxable_shipment,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share,
        new_margin_exc_gst,
        new_margin_gst,
        credits_franchise_cost_exc_gst,
        credits_franchise_cost_gst,
        credits_customer_cost_exc_gst,
        credits_customer_cost_gst,
        carrier_credit_amount,
        carrier_credit_gst,
        carrier_credit_total
        FROM tmp_xms_tbl_sc_rpt_fran_pab_credit
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyDeductToFrozenV2" parameterType="String">
        INSERT INTO xms_tbl_sc_rpt_fran_pab_deduct(
        rpt_txn_id,
        franchise_code,
        customer_name,
        invoice_number,
        airbill_number,
        customer_payment,
        customer_cost,
        customer_tax,
        franchise_cost,
        franchise_tax,
        franchise_charge
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        customer_name,
        invoice_number,
        airbill_number,
        customer_payment,
        customer_cost,
        customer_tax,
        franchise_cost,
        franchise_tax,
        franchise_charge
        FROM tmp_xms_tbl_sc_rpt_fran_pab_deduct
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyNonCentralToFrozenV2" parameterType="String">
        INSERT INTO xms_tbl_sc_rpt_fran_pab_non_central(
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        payment_date,
        invoice_number,
        airbill_number,
        customer_number,
        customer_name,
        international_domestic,
        customer_total_exc_gst,
        customer_total_gst,
        franchise_cost_exc_gst,
        franchise_cost_gst,
        previously_paid,
        payments_received,
        amount_outstanding,
        credits_franchise_cost,
        credits_customer_cost,
        gross_margin_exc_gst,
        gross_margin_gst,
        profit_share_exc_gst,
        profit_share_gst,
        total_profit_share
        FROM tmp_xms_tbl_sc_rpt_fran_pab_non_central
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyOverpaymentToFrozenV2" parameterType="String">
        INSERT INTO xms_tbl_sc_rpt_fran_pab_overpayment(
        rpt_txn_id,
        franchise_code,
        origin_payment_date,
        customer_number,
        customer_name,
        overpayment_type,
        amount
        )
        SELECT
        rpt_txn_id,
        franchise_code,
        origin_payment_date,
        customer_number,
        customer_name,
        overpayment_type,
        amount
        FROM tmp_xms_tbl_sc_rpt_fran_pab_overpayment
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>
    <!-- END of use to copy data from live to the frozen tables v2 -->

    <!-- Prepare data for Franchise Receivable (SC) -->
    <insert id="prepareShipmentRawData" parameterType="FranchisePayableFilter">
        <![CDATA[
		insert into tmp_xms_tbl_fran_rab_shipment_raw (
			rpt_txn_id,
			import_date,
			customer_code,
			customer_name,
			invoice_code,
			airbill_number,
			is_domestic,
			is_taxable_shipment,
			cust_cost,
			cust_tax,
			cust_marginable,
			cust_marginable_tax,
			fran_cost,
			fran_tax,
			gross_margin,
			gross_margin_tax,
			fran_credit,
			cust_credit,
			share_model,
			management_fee_pct,
			marketing_fee_pct,
			intl_shipment_fee,
			dom_shipment_fee,
			profit_share_pct
		)
		select
			#{rptTxnId},
			r.import_date,
			r.customer_code,
			r.customer_name,
			r.invoice_code,
			r.airbill_number,
			if(sender.country = receiver.country and sender.country = sst.default_origin_country,1,0) as is_domestic,
    		if((sender.country = receiver.country and sender.country = sst.default_origin_country)
        		or
        		(sender.country != receiver.country and sender.country = sst.default_origin_country and eec.countryname is not null)
				,1,0) as is_taxable_shipment,
			r.cust_cost,
			r.cust_tax,
			r.cust_marginable,
    		r.cust_marginable_tax,
			r.fran_cost,
			r.fran_tax,
			r.gross_margin,
			r.gross_margin_tax,
			ifnull(credit.franchise_credit,0) as fran_credit,
			ifnull(credit.customer_credit,0) as cust_credit,
			f.share_model,
			ifnull(sst.management_fee_pct,0) as management_fee_pct,
		    ifnull(sst.marketing_fee_pct,0) as marketing_fee_pct,
		    ifnull(sst.intl_shipment_fee,0) as intl_shipment_fee,
		    ifnull(sst.dom_shipment_fee,0) as dom_shipment_fee,
			f.profit_share as profit_share_pct
		from 
			(select 
				sb.import_date,
				c.customer_code,
				ca.customer_name,
				i.invoice_code,
				sb.airbill_number,
				sb.senderaddressid,
        		sb.receiveraddressid,
				sum(sb.customer_cost) as cust_cost,
				sum(sb.customer_tax_amount) as cust_tax,
				sum(if(sb.accessorial_count=0 or (sb.accessorial_count!=0 and sb.customer_cost>sb.franchise_cost),sb.customer_cost,0)) as cust_marginable,
        		sum(if(sb.accessorial_count=0 or (sb.accessorial_count!=0 and sb.customer_cost>sb.franchise_cost),sb.customer_tax_amount,0)) as cust_marginable_tax,
				sum(sb.franchise_cost) as fran_cost,
				sum(sb.franchise_tax_amount) as fran_tax,
				sum(sb.customer_cost-sb.franchise_cost) as gross_margin,
				sum(sb.customer_tax_amount-sb.franchise_tax_amount) as gross_margin_tax
			from xms_tbl_shipment_billing as sb
			inner join xms_tbl_shipment_invoice as si on si.shipmentid = sb.shipmentid and si.airbill_number = sb.airbill_number
			inner join xms_tbl_invoice as i on i.invoiceid = si.invoiceid
			inner join
				(select customer_code from xms_tbl_customer
				where franchise_code in
			]]>
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        union
        select franchise_code from xms_tbl_franchise
        where franchise_code in
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        <![CDATA[
				) as c on c.customer_code = i.customer_code
			inner join xms_tbl_customer_address as ca on ca.customer_code = c.customer_code
			where sb.import_date>=#{startDate,jdbcType=DATE} and sb.import_date<date_add(#{endDate,jdbcType=DATE},interval 1 day)
			group by customer_code, invoice_code, airbill_number
			) as r
		inner join xms_tbl_franchise as f on left(f.franchise_code,3) = left(r.customer_code,3)
		left join
			(select 
				(select setting_value from xms_tbl_system_setting
				where setting_name = 'Management Service Fee Percentage' limit 1) as management_fee_pct,
				(select setting_value from xms_tbl_system_setting
				where setting_name = 'Marketing Service Fee Percentage' limit 1) as marketing_fee_pct,
				(select setting_value from xms_tbl_system_setting
				where setting_name = 'International Shipment Fee' limit 1) as intl_shipment_fee,
				(select setting_value from xms_tbl_system_setting
				where setting_name = 'Domestic Shipment Fee' limit 1) as dom_shipment_fee,
				(select setting_value from xms_tbl_system_setting	
				where setting_name = 'Default Origin Country' limit 1) as default_origin_country
		    ) as sst on 1=1
		left join 
			(select
				adj.airbill_number,
				sum(if(adj.credit_type=0,cp.amount,0)) as franchise_credit,
				sum(if(adj.credit_type=0,adj.customer_amount,0)) as franchise_credit_amount,
				sum(if(adj.credit_type=0,adj.gst_customer_amount,0)) as franchise_credit_gst,
				sum(if(adj.credit_type=1,cp.amount,0)) as customer_credit
			from xms_tbl_customer_payment as cp 
			inner join xms_tbl_credit_note_detail as cnd on cnd.cus_paymentid = cp.cus_paymentid
			inner join xms_tbl_airbill_adjustment as adj on adj.adjustmentid = cnd.adjustmentid
			where cp.payment_date>=#{startDate,jdbcType=DATE} and cp.payment_date<date_add(#{endDate,jdbcType=DATE},interval 1 day)
			group by adj.airbill_number
			) as credit on credit.airbill_number = r.airbill_number
		inner join xms_tbl_address as sender on sender.addressid = r.senderaddressid
		inner join xms_tbl_address as receiver on receiver.addressid = r.receiveraddressid
		inner join xms_tbl_country as rc on rc.countryid = receiver.country
		left join xms_tbl_country_eu as eec on eec.countryname = rc.countryname
		]]>
    </insert>

    <insert id="prepareShipmentDetailData" parameterType="FranchisePayableFilter">
        insert into tmp_xms_tbl_fran_rab_shipment_detail (
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        is_taxable_shipment,
        cust_cost,
        cust_tax,
        cust_marginable,
        cust_marginable_tax,
        fran_cost,
        fran_tax,
        gross_margin,
        gross_margin_tax,
        fran_credit,
        cust_credit,
        management_fee,
        marketing_fee,
        profit_share
        )
        select
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        is_taxable_shipment,
        cust_cost,
        cust_tax,
        cust_marginable,
        cust_marginable_tax,
        fran_cost,
        fran_tax,
        gross_margin,
        gross_margin_tax,
        fran_credit,
        cust_credit,
        if(share_model=0,cust_marginable*management_fee_pct/100,0) as management_fee,
        cust_marginable*marketing_fee_pct/100 as marketing_fee,
        if(share_model=0,0,gross_margin*(100-profit_share_pct)/100) as profit_share
        from tmp_xms_tbl_fran_rab_shipment_raw
        where rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="prepareTechnologyFeeDetailData" parameterType="FranchisePayableFilter">
        insert into tmp_xms_tbl_fran_rab_tech_fee_detail (
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        intl_shipment_fee,
        dom_shipment_fee
        )
        select
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        if(is_domestic,0,intl_shipment_fee) as intl_shipment_fee,
        if (is_domestic,dom_shipment_fee,0) as dom_shipment_fee
        from tmp_xms_tbl_fran_rab_shipment_raw
        where rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="prepareSCOverviewData" parameterType="FranchisePayableFilter">
        insert into tmp_xms_tbl_fran_rab_overview (
        rpt_txn_id,
        setups,
        activations,
        printed_invoices,
        email_invoices,
        cust_cost,
        cust_marginable_cost,
        fran_cost,
        fran_cost_taxable,
        fran_cost_non_taxable,
        fran_gst,
        fran_total,
        margin_shared,
        management_fee,
        marketing_fee,
        carrier_credits,
        carrier_credits_taxable,
        carrier_credits_non_taxable,
        carrier_credits_gst,
        carrier_credits_total,
        tech_fee_on_intl_shipment,
        tech_fee_on_dom_shipment,
        intl_shipment_count,
        dom_shipment_count,
        net_receivable,
        gst,
        total_receivable,
        franchise_code
        )
        select
        #{rptTxnId},
        se.setups,
        se.activations,
        se.printed_invoices,
        se.email_invoices,
        ifnull(sm.cust_cost,0) as cust_cost,
        ifnull(sm.cust_marginable_cost,0) as cust_marginable_cost,
        ifnull(sm.fran_cost,0) as fran_cost,
        ifnull(sm.fran_cost_taxable,0) as fran_cost_taxable,
        ifnull(sm.fran_cost_non_taxable,0) as fran_cost_non_taxable,
        ifnull(sm.fran_gst,0) as fran_gst,
        ifnull(sm.fran_total,0) as fran_total,
        ifnull(sm.margin_shared,0) as margin_shared,
        ifnull(sm.management_fee,0) as management_fee,
        ifnull(sm.marketing_fee,0) as marketing_fee,
        ifnull(fc.carrier_credit_amount,0) as carrier_credits,
        ifnull(fc.carrier_credit_taxable,0) as carrier_credits_taxable,
        ifnull(fc.carrier_credit_non_taxable,0) as carrier_credits_non_taxable,
        ifnull(fc.carrier_credit_gst,0) as carrier_credits_gst,
        ifnull(fc.carrier_credit_total,0) as carrier_credits_total,
        ifnull(tf.tech_fee_on_intl_shipment,0) as tech_fee_on_intl_shipment,
        ifnull(tf.tech_fee_on_dom_shipment,0) as tech_fee_on_dom_shipment,
        ifnull(tf.intl_shipment_count,0) as intl_shipment_count,
        ifnull(tf.dom_shipment_count,0) as dom_shipment_count,
        ifnull(sm.fran_cost_non_taxable,0)-ifnull(fc.fran_credit_non_taxable,0)+ifnull(sm.fran_cost_taxable,0)-ifnull(fc.fran_credit_taxable,0)
        as net_receivable,
        (ifnull(fran_gst, 0) - ifnull(carrier_credit_gst, 0)) as gst,
        (ifnull(sm.fran_cost_non_taxable,0)-ifnull(fc.fran_credit_non_taxable,0)+ifnull(sm.fran_cost_taxable,0)-ifnull(fc.fran_credit_taxable,0))
        + (ifnull(sm.fran_cost_taxable,0)-ifnull(fc.fran_credit_taxable,0))*0.2 as total_receivable
        from
        (select
        ifnull((select count(*) from
        (select customer_code from xms_tbl_customer
        <![CDATA[
					where create_date>=date(#{startDate}) and create_date<date_add(#{endDate},interval 1 day) and franchise_code in
					]]>
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        union
        select franchise_code from xms_tbl_franchise
        <![CDATA[
					where create_date>=date(#{startDate}) and create_date<date_add(#{endDate},interval 1 day) and left(franchise_code,3) in 
					]]>
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        ) as c),0) as setups,
        ifnull((select count(*) from
        (select customer_code from xms_tbl_customer
        <![CDATA[
					where activate_date>=date(#{startDate}) and activate_date<date_add(#{endDate},interval 1 day) and franchise_code in 
					]]>
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        union
        select franchise_code from xms_tbl_franchise
        <![CDATA[
					where activate_date>=date(#{startDate}) and activate_date<date_add(#{endDate},interval 1 day) and left(franchise_code,3) in
					]]>
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        ) as c),0) as activations,
        ifnull((select count(*) from xms_tbl_invoice
        <![CDATA[
						where invoice_date>=date(#{startDate}) and invoice_date<date_add(#{endDate},interval 1 day) and status=4 and left(customer_code,3) in
						]]>
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        ),0) as printed_invoices,
        ifnull((select count(*) from xms_tbl_invoice
        <![CDATA[
						where invoice_date>=date(#{startDate}) and invoice_date<date_add(#{endDate},interval 1 day) and status=2 and left(customer_code,3) in 
						]]>
        <foreach item="franchiseCode" collection="franchiseCodeList" open="(" close=")" separator=",">
            #{franchiseCode}
        </foreach>
        ),0) as email_invoices
        ) as se
        left join
        (select
        rpt_txn_id,
        sum(cust_cost) as cust_cost,
        sum(cust_marginable) as cust_marginable_cost,
        sum(fran_cost) as fran_cost,
        sum(if(is_taxable_shipment=1,fran_cost,0)) as fran_cost_taxable,
        sum(if(is_taxable_shipment=0,fran_cost,0)) as fran_cost_non_taxable,
        sum(fran_tax) as fran_gst,
        sum(fran_cost+fran_tax) as fran_total,
        sum(profit_share) as margin_shared,
        sum(management_fee) as management_fee,
        sum(marketing_fee) as marketing_fee
        from tmp_xms_tbl_fran_rab_shipment_detail
        where rpt_txn_id = #{rptTxnId}
        group by rpt_txn_id
        ) as sm on (1=1)
        left join
        (select
        rpt_txn_id,
        sum(intl_shipment_fee) as tech_fee_on_intl_shipment,
        sum(dom_shipment_fee) as tech_fee_on_dom_shipment,
        sum(if(is_domestic=0,1,0)) as intl_shipment_count,
        sum(if(is_domestic=1,1,0)) as dom_shipment_count
        from tmp_xms_tbl_fran_rab_tech_fee_detail
        where rpt_txn_id = #{rptTxnId}
        group by rpt_txn_id
        ) as tf on tf.rpt_txn_id = sm.rpt_txn_id
        left join
        (select
        rpt_txn_id,
        sum(if(is_taxable_shipment=0,credits_franchise_cost_exc_gst,0)) as fran_credit_non_taxable,
        sum(if(is_taxable_shipment=1,credits_franchise_cost_exc_gst,0)) as fran_credit_taxable,
        sum(if(is_taxable_shipment=1,carrier_credit_amount,0)) as carrier_credit_taxable,
        sum(if(is_taxable_shipment=0,carrier_credit_amount,0)) as carrier_credit_non_taxable,
        sum(carrier_credit_amount) as carrier_credit_amount,
        sum(carrier_credit_gst) as carrier_credit_gst,
        sum(carrier_credit_total) as carrier_credit_total
        from tmp_xms_tbl_sc_rpt_fran_pab_credit
        where rpt_txn_id = #{rptTxnId}
        group by rpt_txn_id
        ) as fc on fc.rpt_txn_id = sm.rpt_txn_id
    </insert>

    <insert id="prepareSCOverviewDataForFranchise" parameterType="FranchisePayableFilter">
        insert into tmp_xms_tbl_fran_rab_overview (
        rpt_txn_id,
        setups,
        activations,
        printed_invoices,
        email_invoices,
        cust_cost,
        cust_marginable_cost,
        fran_cost,
        fran_cost_taxable,
        fran_cost_non_taxable,
        fran_gst,
        fran_total,
        margin_shared,
        management_fee,
        marketing_fee,
        carrier_credits,
        carrier_credits_taxable,
        carrier_credits_non_taxable,
        carrier_credits_gst,
        carrier_credits_total,
        tech_fee_on_intl_shipment,
        tech_fee_on_dom_shipment,
        intl_shipment_count,
        dom_shipment_count,
        net_receivable,
        gst,
        total_receivable,
        franchise_code
        )
        select
        #{rptTxnId},
        se.setups,
        se.activations,
        se.printed_invoices,
        se.email_invoices,
        ifnull(sm.cust_cost,0) as cust_cost,
        ifnull(sm.cust_marginable_cost,0) as cust_marginable_cost,
        ifnull(sm.fran_cost,0) as fran_cost,
        ifnull(sm.fran_cost_taxable,0) as fran_cost_taxable,
        ifnull(sm.fran_cost_non_taxable,0) as fran_cost_non_taxable,
        ifnull(sm.fran_gst,0) as fran_gst,
        ifnull(sm.fran_total,0) as fran_total,
        ifnull(sm.margin_shared,0) as margin_shared,
        ifnull(sm.management_fee,0) as management_fee,
        ifnull(sm.marketing_fee,0) as marketing_fee,
        ifnull(fc.carrier_credit_amount,0) as carrier_credits,
        ifnull(fc.carrier_credit_taxable,0) as carrier_credits_taxable,
        ifnull(fc.carrier_credit_non_taxable,0) as carrier_credits_non_taxable,
        ifnull(fc.carrier_credit_gst,0) as carrier_credits_gst,
        ifnull(fc.carrier_credit_total,0) as carrier_credits_total,
        ifnull(tf.tech_fee_on_intl_shipment,0) as tech_fee_on_intl_shipment,
        ifnull(tf.tech_fee_on_dom_shipment,0) as tech_fee_on_dom_shipment,
        ifnull(tf.intl_shipment_count,0) as intl_shipment_count,
        ifnull(tf.dom_shipment_count,0) as dom_shipment_count,
        ifnull(sm.fran_cost_non_taxable,0)-ifnull(fc.fran_credit_non_taxable,0)+ifnull(sm.fran_cost_taxable,0)-ifnull(fc.fran_credit_taxable,0)
        as net_receivable,
        (ifnull(fran_gst, 0) - ifnull(carrier_credit_gst, 0)) as gst,
        (ifnull(sm.fran_cost_non_taxable,0)-ifnull(fc.fran_credit_non_taxable,0)+ifnull(sm.fran_cost_taxable,0)-ifnull(fc.fran_credit_taxable,0))
        + (ifnull(sm.fran_cost_taxable,0)-ifnull(fc.fran_credit_taxable,0))*0.2 as total_receivable,
        #{franchiseCode}
        from
        (select
        ifnull((select count(*) from
        (select customer_code from xms_tbl_customer
        <![CDATA[
					where create_date>=date(#{startDate}) and create_date<date_add(#{endDate},interval 1 day) 
						and franchise_code = #{franchiseCode}
					]]>
        union
        select franchise_code from xms_tbl_franchise
        <![CDATA[
					where create_date>=date(#{startDate}) and create_date<date_add(#{endDate},interval 1 day) 
						and left(franchise_code,3) = #{franchiseCode}
					]]>
        ) as c),0) as setups,
        ifnull((select count(*) from
        (select customer_code from xms_tbl_customer
        <![CDATA[
					where activate_date>=date(#{startDate}) and activate_date<date_add(#{endDate},interval 1 day) 
						and franchise_code = #{franchiseCode} 
					]]>
        union
        select franchise_code from xms_tbl_franchise
        <![CDATA[
					where activate_date>=date(#{startDate}) and activate_date<date_add(#{endDate},interval 1 day) 
						and left(franchise_code,3) = #{franchiseCode} 
					]]>
        ) as c),0) as activations,
        ifnull((select count(*) from xms_tbl_invoice
        <![CDATA[
						where invoice_date>=date(#{startDate}) and invoice_date<date_add(#{endDate},interval 1 day) and status=4 
							and left(customer_code,3) = #{franchiseCode}
						]]>
        ),0) as printed_invoices,
        ifnull((select count(*) from xms_tbl_invoice
        <![CDATA[
						where invoice_date>=date(#{startDate}) and invoice_date<date_add(#{endDate},interval 1 day) and status=2 
							and left(customer_code,3) = #{franchiseCode} 
						]]>
        ),0) as email_invoices
        ) as se
        left join
        (select
        rpt_txn_id,
        left(customer_code,3) as franchise_code,
        sum(cust_cost) as cust_cost,
        sum(cust_marginable) as cust_marginable_cost,
        sum(fran_cost) as fran_cost,
        sum(if(is_taxable_shipment=1,fran_cost,0)) as fran_cost_taxable,
        sum(if(is_taxable_shipment=0,fran_cost,0)) as fran_cost_non_taxable,
        sum(fran_tax) as fran_gst,
        sum(fran_cost+fran_tax) as fran_total,
        sum(profit_share) as margin_shared,
        sum(management_fee) as management_fee,
        sum(marketing_fee) as marketing_fee
        from tmp_xms_tbl_fran_rab_shipment_detail
        where rpt_txn_id = #{rptTxnId} and left(customer_code,3) = #{franchiseCode}
        group by rpt_txn_id, franchise_code
        ) as sm on (1=1)
        left join
        (select
        rpt_txn_id,
        left(customer_code,3) as franchise_code,
        sum(intl_shipment_fee) as tech_fee_on_intl_shipment,
        sum(dom_shipment_fee) as tech_fee_on_dom_shipment,
        sum(if(is_domestic=0,1,0)) as intl_shipment_count,
        sum(if(is_domestic=1,1,0)) as dom_shipment_count
        from tmp_xms_tbl_fran_rab_tech_fee_detail
        where rpt_txn_id = #{rptTxnId} and left(customer_code,3) = #{franchiseCode}
        group by rpt_txn_id, franchise_code
        ) as tf on tf.rpt_txn_id = sm.rpt_txn_id and tf.franchise_code = sm.franchise_code
        left join
        (select
        rpt_txn_id,
        franchise_code,
        sum(if(is_taxable_shipment=0,credits_franchise_cost_exc_gst,0)) as fran_credit_non_taxable,
        sum(if(is_taxable_shipment=1,credits_franchise_cost_exc_gst,0)) as fran_credit_taxable,
        sum(if(is_taxable_shipment=1,carrier_credit_amount,0)) as carrier_credit_taxable,
        sum(if(is_taxable_shipment=0,carrier_credit_amount,0)) as carrier_credit_non_taxable,
        sum(carrier_credit_amount) as carrier_credit_amount,
        sum(carrier_credit_gst) as carrier_credit_gst,
        sum(carrier_credit_total) as carrier_credit_total
        from tmp_xms_tbl_sc_rpt_fran_pab_credit
        where rpt_txn_id = #{rptTxnId} and franchise_code = #{franchiseCode}
        group by rpt_txn_id, franchise_code
        ) as fc on fc.rpt_txn_id = sm.rpt_txn_id and fc.franchise_code = sm.franchise_code
    </insert>

    <insert id="copyShipmentDetailToFrozen" parameterType="String">
        INSERT INTO xms_tbl_fran_rab_shipment_detail (
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        is_taxable_shipment,
        cust_cost,
        cust_tax,
        cust_marginable,
        cust_marginable_tax,
        fran_cost,
        fran_tax,
        gross_margin,
        gross_margin_tax,
        fran_credit,
        cust_credit,
        management_fee,
        marketing_fee,
        profit_share
        )
        SELECT
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        is_taxable_shipment,
        cust_cost,
        cust_tax,
        cust_marginable,
        cust_marginable_tax,
        fran_cost,
        fran_tax,
        gross_margin,
        gross_margin_tax,
        fran_credit,
        cust_credit,
        management_fee,
        marketing_fee,
        profit_share
        FROM tmp_xms_tbl_fran_rab_shipment_detail
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyTechFeeDetailToFrozen" parameterType="String">
        INSERT INTO xms_tbl_fran_rab_tech_fee_detail (
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        intl_shipment_fee,
        dom_shipment_fee
        )
        SELECT
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        intl_shipment_fee,
        dom_shipment_fee
        FROM tmp_xms_tbl_fran_rab_tech_fee_detail
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copySCOverviewToFrozen" parameterType="String">
        INSERT INTO xms_tbl_fran_rab_overview (
        rpt_txn_id,
        setups,
        activations,
        printed_invoices,
        email_invoices,
        cust_cost,
        cust_marginable_cost,
        fran_cost,
        fran_cost_taxable,
        fran_cost_non_taxable,
        fran_gst,
        fran_total,
        margin_shared,
        management_fee,
        marketing_fee,
        carrier_credits,
        carrier_credits_taxable,
        carrier_credits_non_taxable,
        carrier_credits_gst,
        carrier_credits_total,
        tech_fee_on_intl_shipment,
        tech_fee_on_dom_shipment,
        intl_shipment_count,
        dom_shipment_count,
        net_receivable,
        gst,
        total_receivable,
        management_fee_on_credit_revenue,
        management_fee_on_credit_profit_shared,
        franchise_code
        )
        SELECT
        rpt_txn_id,
        setups,
        activations,
        printed_invoices,
        email_invoices,
        cust_cost,
        cust_marginable_cost,
        fran_cost,
        fran_cost_taxable,
        fran_cost_non_taxable,
        fran_gst,
        fran_total,
        margin_shared,
        management_fee,
        marketing_fee,
        carrier_credits,
        carrier_credits_taxable,
        carrier_credits_non_taxable,
        carrier_credits_gst,
        carrier_credits_total,
        tech_fee_on_intl_shipment,
        tech_fee_on_dom_shipment,
        intl_shipment_count,
        dom_shipment_count,
        net_receivable,
        gst,
        total_receivable,
        management_fee_on_credit_revenue,
        management_fee_on_credit_profit_shared,
        franchise_code
        FROM tmp_xms_tbl_fran_rab_overview
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyShipmentDetailFromFrozen" parameterType="String">
        INSERT INTO tmp_xms_tbl_fran_rab_shipment_detail (
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        is_taxable_shipment,
        cust_cost,
        cust_tax,
        cust_marginable,
        cust_marginable_tax,
        fran_cost,
        fran_tax,
        gross_margin,
        gross_margin_tax,
        fran_credit,
        cust_credit,
        management_fee,
        marketing_fee,
        profit_share
        )
        SELECT
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        is_taxable_shipment,
        cust_cost,
        cust_tax,
        cust_marginable,
        cust_marginable_tax,
        fran_cost,
        fran_tax,
        gross_margin,
        gross_margin_tax,
        fran_credit,
        cust_credit,
        management_fee,
        marketing_fee,
        profit_share
        FROM xms_tbl_fran_rab_shipment_detail
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copyTechFeeDetailFromFrozen" parameterType="String">
        INSERT INTO tmp_xms_tbl_fran_rab_tech_fee_detail (
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        intl_shipment_fee,
        dom_shipment_fee
        )
        SELECT
        rpt_txn_id,
        import_date,
        customer_code,
        customer_name,
        invoice_code,
        airbill_number,
        is_domestic,
        intl_shipment_fee,
        dom_shipment_fee
        FROM xms_tbl_fran_rab_tech_fee_detail
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>

    <insert id="copySCOverviewFromFrozen" parameterType="String">
        INSERT INTO tmp_xms_tbl_fran_rab_overview (
        rpt_txn_id,
        setups,
        activations,
        printed_invoices,
        email_invoices,
        cust_cost,
        cust_marginable_cost,
        fran_cost,
        fran_cost_taxable,
        fran_cost_non_taxable,
        fran_gst,
        fran_total,
        margin_shared,
        management_fee,
        marketing_fee,
        carrier_credits,
        carrier_credits_taxable,
        carrier_credits_non_taxable,
        carrier_credits_gst,
        carrier_credits_total,
        tech_fee_on_intl_shipment,
        tech_fee_on_dom_shipment,
        intl_shipment_count,
        dom_shipment_count,
        net_receivable,
        gst,
        total_receivable,
        management_fee_on_credit_revenue,
        management_fee_on_credit_profit_shared,
        franchise_code
        )
        SELECT
        rpt_txn_id,
        setups,
        activations,
        printed_invoices,
        email_invoices,
        cust_cost,
        cust_marginable_cost,
        fran_cost,
        fran_cost_taxable,
        fran_cost_non_taxable,
        fran_gst,
        fran_total,
        margin_shared,
        management_fee,
        marketing_fee,
        carrier_credits,
        carrier_credits_taxable,
        carrier_credits_non_taxable,
        carrier_credits_gst,
        carrier_credits_total,
        tech_fee_on_intl_shipment,
        tech_fee_on_dom_shipment,
        intl_shipment_count,
        dom_shipment_count,
        net_receivable,
        gst,
        total_receivable,
        management_fee_on_credit_revenue,
        management_fee_on_credit_profit_shared,
        franchise_code
        FROM xms_tbl_fran_rab_overview
        WHERE rpt_txn_id = #{rptTxnId}
    </insert>
</mapper>